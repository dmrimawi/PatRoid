2019-09-09 00:32:56: -I- Manifest file is: 
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\AndroidManifest.xml
2019-09-09 00:32:56: -I- Activities are: [{'category': 'LAUNCHER', 'classes': ['MainActivity', 'ConcreteObserver', 'ConcreteSubject', 'Observer', 'Subject'], 'name': 'MainActivity'}, {'category': 'DEFAULT', 'classes': ['Observer', 'SendMessageActivity', 'MainActivity', 'ContactViewBinder', 'Contact', 'SelectContactActivity', 'Subject', 'ConcreteSubject', 'ConcreteObserver'], 'name': 'SendMessageActivity'}, {'category': None, 'classes': ['Observer', 'SendMessageActivity', 'MainActivity', 'ContactViewBinder', 'Contact', 'SelectContactActivity', 'Subject', 'ConcreteSubject', 'ConcreteObserver'], 'name': 'SelectContactActivity'}]
2019-09-09 00:32:56: -I- Java files are (#9): 
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ConcreteObserver.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ConcreteSubject.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\Contact.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ContactViewBinder.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\MainActivity.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\Observer.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\SelectContactActivity.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\SendMessageActivity.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\Subject.java
2019-09-09 00:32:56: -I- Java classes are: ['ConcreteObserver', 'ConcreteSubject', 'Contact', 'ContactViewBinder', 'MainActivity', 'Observer', 'SelectContactActivity', 'SendMessageActivity', 'Subject']
2019-09-09 00:32:56: -I- Inheritance: [{'ConcreteObserver': 'Observer'}, {'ConcreteSubject': 'Subject'}]
2019-09-09 00:32:56: -I- Association relationships are between: [{'Contact': 'Contact'}, {'ConcreteObserver': 'MainActivity'}, {'ConcreteSubject': 'MainActivity'}, {'Observer': 'MainActivity'}, {'Subject': 'MainActivity'}, {'Contact': 'SelectContactActivity'}, {'Contact': 'SendMessageActivity'}, {'Observer': 'Subject'}]
2019-09-09 00:32:56: -I- Aggregation relationships are between: [{'Contact': 'Contact'}, {'Observer': 'Subject'}]
2019-09-09 00:32:57: -I- Depends relationships are between: [{'ConcreteObserver': 'ConcreteSubject'}, {'Contact': 'ContactViewBinder'}]
2019-09-09 00:32:57: -I- Writing relations to the module file...
2019-09-09 00:32:57: -I- Done
2019-09-09 00:32:57: -I- ICA(Inheritance Child Association)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e0b2d0>
2019-09-09 00:32:57: -I- Step2: Get all Association relation classes
2019-09-09 00:32:57: -D- association: <Element 'association' at 0x2e0ba50>
2019-09-09 00:32:57: -I- Step3: Find child classes with association relation
2019-09-09 00:32:57: -D- Found ICA: (Observer, ConcreteObserver, MainActivity)
2019-09-09 00:32:57: -D- Found ICA: (Subject, ConcreteSubject, MainActivity)
2019-09-09 00:32:57: -I- 1. ICA relations: [('Subject', 'ConcreteSubject', 'MainActivity'), ('Observer', 'ConcreteObserver', 'MainActivity')]
2019-09-09 00:32:57: -I- CI (Common Inheritance)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2decc90>
2019-09-09 00:32:57: -I- Step2: Find all children shares the same parent
2019-09-09 00:32:57: -I- 2. CI relations: []
2019-09-09 00:32:57: -I- IAGG (Inheritance AGGregation)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e0bfd0>
2019-09-09 00:32:57: -I- Step2: Get all classes with aggregation relation
2019-09-09 00:32:57: -D- aggregation: <Element 'aggregation' at 0x2e310d0>
2019-09-09 00:32:57: -I- Step3: Find classes that have both inheritance and aggregation
2019-09-09 00:32:57: -I- 3. IAGG relations: []
2019-09-09 00:32:57: -I- IPAG (Inheritance Parent AGgregation)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e383b0>
2019-09-09 00:32:57: -I- Step2: Get all classes with aggregation relation
2019-09-09 00:32:57: -D- aggregation: <Element 'aggregation' at 0x2e38b90>
2019-09-09 00:32:57: -I- Step3: Find classes that have inheritance and the parent have aggregation with other
2019-09-09 00:32:57: -D- Found IPAG: (Subject, ConcreteSubject, Observer)
2019-09-09 00:32:57: -I- 4. IPAG relations: [('Subject', 'ConcreteSubject', 'Observer')]
2019-09-09 00:32:57: -I- MLI (Multi-Level Inheritance)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e31e50>
2019-09-09 00:32:57: -I- Step2: Find all classes that their parent is a child for other parent
2019-09-09 00:32:57: -I- 5. MLI relations: []
2019-09-09 00:32:57: -I- IASS (Inheritance ASSociation)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e0b590>
2019-09-09 00:32:57: -I- Step2: Get all Association relation classes
2019-09-09 00:32:57: -D- association: <Element 'association' at 0x2e38810>
2019-09-09 00:32:57: -I- 6. IASS relations: []
2019-09-09 00:32:57: -I- SAGG (Self-Aggregation)
2019-09-09 00:32:57: -I- Step1: Get all Aggregation relation classes
2019-09-09 00:32:57: -D- aggregation: <Element 'aggregation' at 0x2e406f0>
2019-09-09 00:32:57: -D- Found SAGG: (Contact)
2019-09-09 00:32:57: -I- 7. SAGG relations: [('Contact',)]
2019-09-09 00:32:57: -I- IIAGG (Indirect Inheritance AGGregation)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e38290>
2019-09-09 00:32:57: -I- Step2: Get all Aggregation relation classes
2019-09-09 00:32:57: -D- aggregation: <Element 'aggregation' at 0x2e0b310>
2019-09-09 00:32:57: -I- 8. IIAGG relations: []
2019-09-09 00:32:57: -I- SASS (Self-ASSociation)
2019-09-09 00:32:57: -I- Step1: Get all Association relation classes
2019-09-09 00:32:57: -D- association: <Element 'association' at 0x2e40170>
2019-09-09 00:32:57: -D- Found SASS: (Contact)
2019-09-09 00:32:57: -I- SAGG (Self-Aggregation)
2019-09-09 00:32:57: -I- Step1: Get all Aggregation relation classes
2019-09-09 00:32:57: -D- aggregation: <Element 'aggregation' at 0x2e4a270>
2019-09-09 00:32:57: -D- Found SAGG: (Contact)
2019-09-09 00:32:57: -I- 9. SASS relations: []
2019-09-09 00:32:57: -I- ICD (Inheritance Child Dependency)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e40f50>
2019-09-09 00:32:57: -I- Step2: Get all Depends relation classes
2019-09-09 00:32:57: -D- depends: <Element 'depends' at 0x2e0b470>
2019-09-09 00:32:57: -D- Found ICD: (Observer, ConcreteObserver, ConcreteSubject)
2019-09-09 00:32:57: -I- 10. ICD relations: [('Observer', 'ConcreteObserver', 'ConcreteSubject')]
2019-09-09 00:32:57: -I- DCI (Dependency Child Inheritance)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e31b70>
2019-09-09 00:32:57: -I- Step2: Get all Depends relation classes
2019-09-09 00:32:57: -D- depends: <Element 'depends' at 0x2e4acf0>
2019-09-09 00:32:57: -D- Found DCI: (Subject, ConcreteSubject, ConcreteObserver)
2019-09-09 00:32:57: -I- 11. DCI relations: [('Subject', 'ConcreteSubject', 'ConcreteObserver')]
2019-09-09 00:32:57: -I- IPAS (Inheritance Parent ASsociation)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e4a8f0>
2019-09-09 00:32:57: -I- Step2: Get all Association relation classes
2019-09-09 00:32:57: -D- association: <Element 'association' at 0x2e380d0>
2019-09-09 00:32:57: -D- Found IPAS: (Observer, ConcreteObserver, MainActivity)
2019-09-09 00:32:57: -D- Found IPAS: (Observer, ConcreteObserver, Subject)
2019-09-09 00:32:57: -D- Found IPAS: (Subject, ConcreteSubject, MainActivity)
2019-09-09 00:32:57: -I- 12. IPAS relations: [('Subject', 'ConcreteSubject', 'MainActivity'), ('Observer', 'ConcreteObserver', 'MainActivity'), ('Observer', 'ConcreteObserver', 'Subject')]
2019-09-09 00:32:57: -I- AGPI (AGgregation Parent Inherited)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e0be70>
2019-09-09 00:32:57: -I- Step2: Get all Aggregation relation classes
2019-09-09 00:32:57: -D- aggregation: <Element 'aggregation' at 0x2e51930>
2019-09-09 00:32:57: -D- Found AGPI: (Observer, ConcreteObserver, Subject)
2019-09-09 00:32:57: -I- 13. AGPI relations: [('Observer', 'ConcreteObserver', 'Subject')]
2019-09-09 00:32:57: -I- IPD (Inheritance Parent Dependency)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e51b90>
2019-09-09 00:32:57: -I- Step2: Get all Depends relation classes
2019-09-09 00:32:57: -D- depends: <Element 'depends' at 0x2e40190>
2019-09-09 00:32:57: -I- 14. IPD relations: []
2019-09-09 00:32:57: -I- DPI (Dependency Parent Inherited)
2019-09-09 00:32:57: -I- Step1: Get all parent and child classes
2019-09-09 00:32:57: -D- inheritance: <Element 'inheritance' at 0x2e0b410>
2019-09-09 00:32:57: -I- Step2: Get all Depends relation classes
2019-09-09 00:32:57: -D- depends: <Element 'depends' at 0x2e4ab70>
2019-09-09 00:32:57: -I- 15. DPI relations: []
2019-09-09 00:32:57: -I- Checking for Singleton Design Pattern
2019-09-09 00:32:57: -I- Singleton can be founded by combination of SASS
2019-09-09 00:32:57: -W- Couldn't find any Singleton pattern in the code
2019-09-09 00:32:57: -I- Checking for Composite Design Pattern
2019-09-09 00:32:57: -I- Composite can be founded by combination of SAGG, CI & IAGG, CI & IIAGG
2019-09-09 00:32:57: -D- Step1: checking for SAGG
2019-09-09 00:32:57: -D- Composite DP in: {'SAGG': ('Contact',)}
2019-09-09 00:32:57: -D- Step2: checking for CI & IAGG
2019-09-09 00:32:57: -D- Step3: checking for CI & IIAGG
2019-09-09 00:32:57: -I- Composite design pattern has been detected: [{'SAGG': ('Contact',)}]
2019-09-09 00:32:57: -I- Checking for Template Design Pattern
2019-09-09 00:32:57: -I- Template can be founded by combination of CI relation
2019-09-09 00:32:57: -W- Couldn't find any Template pattern in the code
2019-09-09 00:32:57: -I- Checking for Abstract Factory Design Pattern
2019-09-09 00:32:57: -I- Abstract Factory can be founded by combination of DCI & IDC & CI
2019-09-09 00:32:57: -W- Couldn't find any Abstract Factory pattern in the code
2019-09-09 00:32:57: -I- Checking for Adapter Design Pattern
2019-09-09 00:32:57: -I- Adapter can be founded by combination of ICA relation and a non-existance of CI relation
2019-09-09 00:32:57: -D- Adapter DP in: ('Subject', 'ConcreteSubject', 'MainActivity')
2019-09-09 00:32:57: -D- Adapter DP in: ('Observer', 'ConcreteObserver', 'MainActivity')
2019-09-09 00:32:58: -I- Adapter design pattern has been detected: [{'ICA': ('Subject', 'ConcreteSubject', 'MainActivity')}, {'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}]
2019-09-09 00:32:58: -I- Checking for Bridge Design Pattern
2019-09-09 00:32:58: -I- Bridge can be founded by combination of IPAG and CI
2019-09-09 00:32:58: -W- Couldn't find any bridge pattern in the code
2019-09-09 00:32:58: -I- Checking for Builder Design Pattern
2019-09-09 00:32:58: -I- Builder can be founded by combination of IDA & AGPI
2019-09-09 00:32:58: -D- Builder DP in: {'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}
2019-09-09 00:32:58: -I- Builder design pattern has been detected: [{'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}]
2019-09-09 00:32:58: -I- Checking for Chain of Responsibility Design Pattern
2019-09-09 00:32:58: -I- Chain of Responsibility can be founded by combination of SASS & CI
2019-09-09 00:32:58: -W- Couldn't find any Chain of Responsibility pattern in the code
2019-09-09 00:32:58: -I- Checking for Command Design Pattern
2019-09-09 00:32:58: -I- Command can be founded by combination of ICA & AGPI
2019-09-09 00:32:58: -D- Command DP in: {'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}
2019-09-09 00:32:58: -I- Command design pattern has been detected: [{'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}]
2019-09-09 00:32:58: -I- Checking for Decorator Design Pattern
2019-09-09 00:32:58: -I- Decorator can be founded by combination of CI & IAGG & MLI
2019-09-09 00:32:58: -W- Couldn't find any decorator pattern in the code
2019-09-09 00:32:58: -I- Checking for Facad Design Pattern
2019-09-09 00:32:58: -I- Facad can be founded by combination of triple ICD
2019-09-09 00:32:58: -W- Couldn't find any Facad pattern in the code
2019-09-09 00:32:58: -I- Checking for Factory Design Pattern
2019-09-09 00:32:58: -I- Factory can be founded by combination of ICD & DCI
2019-09-09 00:32:58: -D- Factory DP in: {'DCI': ('Subject', 'ConcreteSubject', 'ConcreteObserver'), 'ICD': ('Observer', 'ConcreteObserver', 'ConcreteSubject')}
2019-09-09 00:32:58: -I- Factory design pattern has been detected: [{'DCI': ('Subject', 'ConcreteSubject', 'ConcreteObserver'), 'ICD': ('Observer', 'ConcreteObserver', 'ConcreteSubject')}]
2019-09-09 00:32:58: -I- Checking for Flyweight Design Pattern
2019-09-09 00:32:58: -I- Flyweight can be founded by combination of CI & AGPI
2019-09-09 00:32:58: -W- Couldn't find any flyweight pattern in the code
2019-09-09 00:32:58: -I- Checking for Interpreter Design Pattern
2019-09-09 00:32:58: -I- Interpreter can be founded by combination of IAGG & CI & IPD
2019-09-09 00:32:58: -W- Couldn't find any Interpreter pattern in the code
2019-09-09 00:32:58: -I- Checking for Iterator Design Pattern
2019-09-09 00:32:58: -I- Iterator can be founded by combination of ICD & DCI & ICA
2019-09-09 00:32:58: -W- Couldn't find any Iterator pattern in the code
2019-09-09 00:32:58: -I- Checking for Mediator Design Pattern
2019-09-09 00:32:58: -I- Mediator can be founded by combination of CI & IPAS & ICA
2019-09-09 00:32:58: -W- Couldn't find any Mediator pattern in the code
2019-09-09 00:32:58: -I- Checking for Memento Design Pattern
2019-09-09 00:32:58: -I- Memento can be founded by combination of AGPI & DPI
2019-09-09 00:32:58: -W- Couldn't find any Memento pattern in the code
2019-09-09 00:32:58: -I- Checking for Observer Design Pattern
2019-09-09 00:32:58: -I- Observer can be founded by combination of AGPI & ICD
2019-09-09 00:32:58: -D- Observer DP in: {'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICD': ('Observer', 'ConcreteObserver', 'ConcreteSubject')}
2019-09-09 00:32:58: -I- Observer design pattern has been detected: [{'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICD': ('Observer', 'ConcreteObserver', 'ConcreteSubject')}]
2019-09-09 00:32:58: -I- Checking for Prototype Design Pattern
2019-09-09 00:32:58: -I- Prototype can be founded by combination of CI & AGPI
2019-09-09 00:32:58: -W- Couldn't find any Prototype pattern in the code
2019-09-09 00:32:58: -I- Checking for Proxy Design Pattern
2019-09-09 00:32:58: -I- Proxy can be founded by combination of ICA & CI, CI & IASS
2019-09-09 00:32:58: -W- Couldn't find any proxy pattern in the code
2019-09-09 00:32:58: -I- Checking for State Design Pattern
2019-09-09 00:32:58: -I- State can be founded by combination of AGPI & CI
2019-09-09 00:32:58: -W- Couldn't find any State pattern in the code
2019-09-09 00:32:58: -I- Checking for Strategy Design Pattern
2019-09-09 00:32:58: -I- Strategy can be founded by combination of AGPI & CI
2019-09-09 00:32:58: -W- Couldn't find any Strategy pattern in the code
2019-09-09 00:32:58: -I- Checking for Visitor Design Pattern
2019-09-09 00:32:58: -I- Visitor can be founded by combination of AGPI & ICD & DPI
2019-09-09 00:32:58: -W- Couldn't find any Visitor pattern in the code
2019-09-09 00:32:58: -I- Design Pattern [observer] is found in: [{'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICD': ('Observer', 'ConcreteObserver', 'ConcreteSubject')}]
2019-09-09 00:32:58: -I- Design Pattern [factory] is found in: [{'DCI': ('Subject', 'ConcreteSubject', 'ConcreteObserver'), 'ICD': ('Observer', 'ConcreteObserver', 'ConcreteSubject')}]
2019-09-09 00:32:58: -I- Design Pattern [composite] is found in: [{'SAGG': ('Contact',)}]
2019-09-09 00:32:58: -I- Design Pattern [builder] is found in: [{'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}]
2019-09-09 00:32:58: -I- Design Pattern [command] is found in: [{'AGPI': ('Observer', 'ConcreteObserver', 'Subject'), 'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}]
2019-09-09 00:32:58: -I- Design Pattern [adapter] is found in: [{'ICA': ('Subject', 'ConcreteSubject', 'MainActivity')}, {'ICA': ('Observer', 'ConcreteObserver', 'MainActivity')}]
