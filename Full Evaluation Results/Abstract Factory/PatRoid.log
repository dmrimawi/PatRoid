2019-09-08 22:22:30: -I- Manifest file is: 
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\AndroidManifest.xml
2019-09-08 22:22:30: -I- Activities are: [{'category': 'LAUNCHER', 'classes': ['ConcreteProductB', 'AbstractProduct', 'ConcreteFactory', 'ConcreteProductA', 'MainActivity', 'AbstractFactory', 'SharingShortcutsManager'], 'name': 'MainActivity'}, {'category': 'DEFAULT', 'classes': ['ConcreteProductB', 'AbstractProduct', 'ConcreteFactory', 'ConcreteProductA', 'SendMessageActivity', 'MainActivity', 'ContactViewBinder', 'Contact', 'SelectContactActivity', 'AbstractFactory', 'SharingShortcutsManager'], 'name': 'SendMessageActivity'}, {'category': None, 'classes': ['ConcreteProductB', 'AbstractProduct', 'ConcreteFactory', 'ConcreteProductA', 'SendMessageActivity', 'MainActivity', 'ContactViewBinder', 'Contact', 'SelectContactActivity', 'AbstractFactory', 'SharingShortcutsManager'], 'name': 'SelectContactActivity'}]
2019-09-08 22:22:30: -I- Java files are (#11): 
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\AbstractFactory.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\AbstractProduct.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ConcreteFactory.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ConcreteProductA.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ConcreteProductB.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\Contact.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\ContactViewBinder.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\MainActivity.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\SelectContactActivity.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\SendMessageActivity.java
C:\Users\Diaed\Dropbox\Master\Seminar\Seminar1\Experiment\AndroidAppsRepo\android-SharingShortcuts\Application\src\main\java\com\example\android\sharingshortcuts\SharingShortcutsManager.java
2019-09-08 22:22:30: -I- Java classes are: ['AbstractFactory', 'AbstractProduct', 'ConcreteFactory', 'ConcreteProductA', 'ConcreteProductB', 'Contact', 'ContactViewBinder', 'MainActivity', 'SelectContactActivity', 'SendMessageActivity', 'SharingShortcutsManager']
2019-09-08 22:22:30: -I- Inheritance: [{'ConcreteFactory': 'AbstractFactory'}, {'ConcreteProductA': 'AbstractProduct'}, {'ConcreteProductB': 'AbstractProduct'}]
2019-09-08 22:22:30: -I- Association relationships are between: [{'Contact': 'Contact'}, {'AbstractProduct': 'MainActivity'}, {'ConcreteProductB': 'MainActivity'}, {'ConcreteFactory': 'MainActivity'}, {'ConcreteProductA': 'MainActivity'}, {'AbstractFactory': 'MainActivity'}, {'Contact': 'SelectContactActivity'}, {'Contact': 'SendMessageActivity'}, {'Contact': 'SharingShortcutsManager'}]
2019-09-08 22:22:30: -I- Aggregation relationships are between: [{'Contact': 'Contact'}]
2019-09-08 22:22:30: -I- Depends relationships are between: [{'ConcreteFactory': 'ConcreteProductA'}, {'ConcreteFactory': 'ConcreteProductB'}, {'Contact': 'ContactViewBinder'}]
2019-09-08 22:22:30: -I- Writing relations to the module file...
2019-09-08 22:22:30: -I- Done
2019-09-08 22:22:30: -I- ICA(Inheritance Child Association)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2eccef0>
2019-09-08 22:22:30: -I- Step2: Get all Association relation classes
2019-09-08 22:22:30: -D- association: <Element 'association' at 0x2eed930>
2019-09-08 22:22:30: -I- Step3: Find child classes with association relation
2019-09-08 22:22:30: -I- 1. ICA relations: []
2019-09-08 22:22:30: -I- CI (Common Inheritance)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2eccf70>
2019-09-08 22:22:30: -I- Step2: Find all children shares the same parent
2019-09-08 22:22:30: -D- Found CI: (AbstractProduct, ConcreteProductA, ConcreteProductB)
2019-09-08 22:22:30: -D- Found CI: (AbstractProduct, ConcreteProductB, ConcreteProductA)
2019-09-08 22:22:30: -I- 2. CI relations: [('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA')]
2019-09-08 22:22:30: -I- IAGG (Inheritance AGGregation)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2eed1b0>
2019-09-08 22:22:30: -I- Step2: Get all classes with aggregation relation
2019-09-08 22:22:30: -D- aggregation: <Element 'aggregation' at 0x2f14350>
2019-09-08 22:22:30: -I- Step3: Find classes that have both inheritance and aggregation
2019-09-08 22:22:30: -I- 3. IAGG relations: []
2019-09-08 22:22:30: -I- IPAG (Inheritance Parent AGgregation)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2f1c0d0>
2019-09-08 22:22:30: -I- Step2: Get all classes with aggregation relation
2019-09-08 22:22:30: -D- aggregation: <Element 'aggregation' at 0x2f147d0>
2019-09-08 22:22:30: -I- Step3: Find classes that have inheritance and the parent have aggregation with other
2019-09-08 22:22:30: -I- 4. IPAG relations: []
2019-09-08 22:22:30: -I- MLI (Multi-Level Inheritance)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2eeddb0>
2019-09-08 22:22:30: -I- Step2: Find all classes that their parent is a child for other parent
2019-09-08 22:22:30: -I- 5. MLI relations: []
2019-09-08 22:22:30: -I- IASS (Inheritance ASSociation)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2eed770>
2019-09-08 22:22:30: -I- Step2: Get all Association relation classes
2019-09-08 22:22:30: -D- association: <Element 'association' at 0x2eed9d0>
2019-09-08 22:22:30: -I- 6. IASS relations: []
2019-09-08 22:22:30: -I- SAGG (Self-Aggregation)
2019-09-08 22:22:30: -I- Step1: Get all Aggregation relation classes
2019-09-08 22:22:30: -D- aggregation: <Element 'aggregation' at 0x2eed170>
2019-09-08 22:22:30: -D- Found SAGG: (Contact)
2019-09-08 22:22:30: -I- 7. SAGG relations: [('Contact',)]
2019-09-08 22:22:30: -I- IIAGG (Indirect Inheritance AGGregation)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2eccc70>
2019-09-08 22:22:30: -I- Step2: Get all Aggregation relation classes
2019-09-08 22:22:30: -D- aggregation: <Element 'aggregation' at 0x2f1c8d0>
2019-09-08 22:22:30: -I- 8. IIAGG relations: []
2019-09-08 22:22:30: -I- SASS (Self-ASSociation)
2019-09-08 22:22:30: -I- Step1: Get all Association relation classes
2019-09-08 22:22:30: -D- association: <Element 'association' at 0x2eed490>
2019-09-08 22:22:30: -D- Found SASS: (Contact)
2019-09-08 22:22:30: -I- SAGG (Self-Aggregation)
2019-09-08 22:22:30: -I- Step1: Get all Aggregation relation classes
2019-09-08 22:22:30: -D- aggregation: <Element 'aggregation' at 0x2f146b0>
2019-09-08 22:22:30: -D- Found SAGG: (Contact)
2019-09-08 22:22:30: -I- 9. SASS relations: []
2019-09-08 22:22:30: -I- ICD (Inheritance Child Dependency)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2f26650>
2019-09-08 22:22:30: -I- Step2: Get all Depends relation classes
2019-09-08 22:22:30: -D- depends: <Element 'depends' at 0x2f26d50>
2019-09-08 22:22:30: -D- Found ICD: (AbstractFactory, ConcreteFactory, ConcreteProductA)
2019-09-08 22:22:30: -D- Found ICD: (AbstractFactory, ConcreteFactory, ConcreteProductB)
2019-09-08 22:22:30: -I- 10. ICD relations: [('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB'), ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')]
2019-09-08 22:22:30: -I- DCI (Dependency Child Inheritance)
2019-09-08 22:22:30: -I- Step1: Get all parent and child classes
2019-09-08 22:22:30: -D- inheritance: <Element 'inheritance' at 0x2f268b0>
2019-09-08 22:22:30: -I- Step2: Get all Depends relation classes
2019-09-08 22:22:30: -D- depends: <Element 'depends' at 0x2eccc50>
2019-09-08 22:22:31: -D- Found DCI: (AbstractProduct, ConcreteProductA, ConcreteFactory)
2019-09-08 22:22:31: -D- Found DCI: (AbstractProduct, ConcreteProductB, ConcreteFactory)
2019-09-08 22:22:31: -I- 11. DCI relations: [('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory')]
2019-09-08 22:22:31: -I- IPAS (Inheritance Parent ASsociation)
2019-09-08 22:22:31: -I- Step1: Get all parent and child classes
2019-09-08 22:22:31: -D- inheritance: <Element 'inheritance' at 0x2f32110>
2019-09-08 22:22:31: -I- Step2: Get all Association relation classes
2019-09-08 22:22:31: -D- association: <Element 'association' at 0x2eed070>
2019-09-08 22:22:31: -I- 12. IPAS relations: []
2019-09-08 22:22:31: -I- AGPI (AGgregation Parent Inherited)
2019-09-08 22:22:31: -I- Step1: Get all parent and child classes
2019-09-08 22:22:31: -D- inheritance: <Element 'inheritance' at 0x2f26830>
2019-09-08 22:22:31: -I- Step2: Get all Aggregation relation classes
2019-09-08 22:22:31: -D- aggregation: <Element 'aggregation' at 0x2f328f0>
2019-09-08 22:22:31: -I- 13. AGPI relations: []
2019-09-08 22:22:31: -I- IPD (Inheritance Parent Dependency)
2019-09-08 22:22:31: -I- Step1: Get all parent and child classes
2019-09-08 22:22:31: -D- inheritance: <Element 'inheritance' at 0x2f3b630>
2019-09-08 22:22:31: -I- Step2: Get all Depends relation classes
2019-09-08 22:22:31: -D- depends: <Element 'depends' at 0x2f32c90>
2019-09-08 22:22:31: -I- 14. IPD relations: []
2019-09-08 22:22:31: -I- DPI (Dependency Parent Inherited)
2019-09-08 22:22:31: -I- Step1: Get all parent and child classes
2019-09-08 22:22:31: -D- inheritance: <Element 'inheritance' at 0x2f269b0>
2019-09-08 22:22:31: -I- Step2: Get all Depends relation classes
2019-09-08 22:22:31: -D- depends: <Element 'depends' at 0x2f260b0>
2019-09-08 22:22:31: -I- 15. DPI relations: []
2019-09-08 22:22:31: -I- Checking for Singleton Design Pattern
2019-09-08 22:22:31: -I- Singleton can be founded by combination of SASS
2019-09-08 22:22:31: -W- Couldn't find any Singleton pattern in the code
2019-09-08 22:22:31: -I- Checking for Composite Design Pattern
2019-09-08 22:22:31: -I- Composite can be founded by combination of SAGG, CI & IAGG, CI & IIAGG
2019-09-08 22:22:31: -D- Step1: checking for SAGG
2019-09-08 22:22:31: -D- Composite DP in: {'SAGG': ('Contact',)}
2019-09-08 22:22:31: -D- Step2: checking for CI & IAGG
2019-09-08 22:22:31: -D- Step3: checking for CI & IIAGG
2019-09-08 22:22:31: -I- Composite design pattern has been detected: [{'SAGG': ('Contact',)}]
2019-09-08 22:22:31: -I- Checking for Template Design Pattern
2019-09-08 22:22:31: -I- Template can be founded by combination of CI relation
2019-09-08 22:22:31: -D- Template DP in: {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA')}
2019-09-08 22:22:31: -I- Template design pattern has been detected: [{'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA')}]
2019-09-08 22:22:31: -I- Checking for Abstract Factory Design Pattern
2019-09-08 22:22:31: -I- Abstract Factory can be founded by combination of DCI & IDC & CI
2019-09-08 22:22:31: -D- Abstract Factory DP in: {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}
2019-09-08 22:22:31: -D- Abstract Factory DP in: {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}
2019-09-08 22:22:31: -D- Abstract Factory DP in: {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}
2019-09-08 22:22:31: -D- Abstract Factory DP in: {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}
2019-09-08 22:22:31: -I- Abstract Factory design pattern has been detected: [{'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}, {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}, {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}, {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}]
2019-09-08 22:22:31: -I- Checking for Adapter Design Pattern
2019-09-08 22:22:31: -I- Adapter can be founded by combination of ICA relation and a non-existance of CI relation
2019-09-08 22:22:31: -W- Couldn't find any adapter pattern in the code
2019-09-08 22:22:31: -I- Checking for Bridge Design Pattern
2019-09-08 22:22:31: -I- Bridge can be founded by combination of IPAG and CI
2019-09-08 22:22:31: -W- Couldn't find any bridge pattern in the code
2019-09-08 22:22:31: -I- Checking for Builder Design Pattern
2019-09-08 22:22:31: -I- Builder can be founded by combination of IDA & AGPI
2019-09-08 22:22:31: -W- Couldn't find any Builder pattern in the code
2019-09-08 22:22:31: -I- Checking for Chain of Responsibility Design Pattern
2019-09-08 22:22:31: -I- Chain of Responsibility can be founded by combination of SASS & CI
2019-09-08 22:22:31: -W- Couldn't find any Chain of Responsibility pattern in the code
2019-09-08 22:22:31: -I- Checking for Command Design Pattern
2019-09-08 22:22:31: -I- Command can be founded by combination of ICA & AGPI
2019-09-08 22:22:31: -W- Couldn't find any Command pattern in the code
2019-09-08 22:22:31: -I- Checking for Decorator Design Pattern
2019-09-08 22:22:31: -I- Decorator can be founded by combination of CI & IAGG & MLI
2019-09-08 22:22:31: -W- Couldn't find any decorator pattern in the code
2019-09-08 22:22:31: -I- Checking for Facad Design Pattern
2019-09-08 22:22:31: -I- Facad can be founded by combination of triple ICD
2019-09-08 22:22:31: -W- Couldn't find any Facad pattern in the code
2019-09-08 22:22:31: -I- Checking for Factory Design Pattern
2019-09-08 22:22:31: -I- Factory can be founded by combination of ICD & DCI
2019-09-08 22:22:31: -D- Factory DP in: {'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}
2019-09-08 22:22:31: -D- Factory DP in: {'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}
2019-09-08 22:22:31: -I- Factory design pattern has been detected: [{'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}, {'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}]
2019-09-08 22:22:31: -I- Checking for Flyweight Design Pattern
2019-09-08 22:22:31: -I- Flyweight can be founded by combination of CI & AGPI
2019-09-08 22:22:31: -W- Couldn't find any flyweight pattern in the code
2019-09-08 22:22:31: -I- Checking for Interpreter Design Pattern
2019-09-08 22:22:31: -I- Interpreter can be founded by combination of IAGG & CI & IPD
2019-09-08 22:22:31: -W- Couldn't find any Interpreter pattern in the code
2019-09-08 22:22:31: -I- Checking for Iterator Design Pattern
2019-09-08 22:22:31: -I- Iterator can be founded by combination of ICD & DCI & ICA
2019-09-08 22:22:31: -W- Couldn't find any Iterator pattern in the code
2019-09-08 22:22:31: -I- Checking for Mediator Design Pattern
2019-09-08 22:22:31: -I- Mediator can be founded by combination of CI & IPAS & ICA
2019-09-08 22:22:31: -W- Couldn't find any Mediator pattern in the code
2019-09-08 22:22:31: -I- Checking for Memento Design Pattern
2019-09-08 22:22:31: -I- Memento can be founded by combination of AGPI & DPI
2019-09-08 22:22:31: -W- Couldn't find any Memento pattern in the code
2019-09-08 22:22:31: -I- Checking for Observer Design Pattern
2019-09-08 22:22:31: -I- Observer can be founded by combination of AGPI & ICD
2019-09-08 22:22:31: -W- Couldn't find any Observer pattern in the code
2019-09-08 22:22:31: -I- Checking for Prototype Design Pattern
2019-09-08 22:22:31: -I- Prototype can be founded by combination of CI & AGPI
2019-09-08 22:22:31: -W- Couldn't find any Prototype pattern in the code
2019-09-08 22:22:31: -I- Checking for Proxy Design Pattern
2019-09-08 22:22:31: -I- Proxy can be founded by combination of ICA & CI, CI & IASS
2019-09-08 22:22:31: -W- Couldn't find any proxy pattern in the code
2019-09-08 22:22:31: -I- Checking for State Design Pattern
2019-09-08 22:22:31: -I- State can be founded by combination of AGPI & CI
2019-09-08 22:22:31: -W- Couldn't find any State pattern in the code
2019-09-08 22:22:31: -I- Checking for Strategy Design Pattern
2019-09-08 22:22:31: -I- Strategy can be founded by combination of AGPI & CI
2019-09-08 22:22:31: -W- Couldn't find any Strategy pattern in the code
2019-09-08 22:22:31: -I- Checking for Visitor Design Pattern
2019-09-08 22:22:31: -I- Visitor can be founded by combination of AGPI & ICD & DPI
2019-09-08 22:22:31: -W- Couldn't find any Visitor pattern in the code
2019-09-08 22:22:31: -I- Design Pattern [factory] is found in: [{'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}, {'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}]
2019-09-08 22:22:31: -I- Design Pattern [template] is found in: [{'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA')}]
2019-09-08 22:22:31: -I- Design Pattern [composite] is found in: [{'SAGG': ('Contact',)}]
2019-09-08 22:22:31: -I- Design Pattern [abstract_factory] is found in: [{'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}, {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductB')}, {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductA', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}, {'CI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteProductA'), 'DCI': ('AbstractProduct', 'ConcreteProductB', 'ConcreteFactory'), 'ICD': ('AbstractFactory', 'ConcreteFactory', 'ConcreteProductA')}]
